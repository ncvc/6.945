After calling (foo 10), it calls (iter 'a 10) followed by (iter 'b 10). Each of these calls simply initialize a function to be called when there is an input on its queue, then places the value 10 on each input queue. The order in which the 'a queue is consumed is not related to the order the 'b queue is consumed (consumption is asynchronous). Thus, the schedulers (both in our interpreter and the one on the host OS) effectively determine the order of the output. It should be noted that only looking at the output of 'a (and similarly for 'b) results in the expected ordering, as a new item is added to the queue only when the previous one is consumed.
