4.1
Code in analyze.scm

Test output:

eval> ((lambda x (map square x)) 1 2 3 4)
(1 4 9 16)

eval> ((lambda (x y) (square (+ x y))) 3 1)
16

eval> (define (ss . x) (map square x))
ok

eval> (ss 1 2 3 4)
(1 4 9 16)


4.2
(infix "4*(5+3)*2")

(define (quadratic a b c)
  (let ((discriminant (infix "b^2-4*a*c")))
    (infix "(-b+sqrt(discriminant))/(2*a)")))